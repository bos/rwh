--# arithmetic

2 + 2
31337 * 101
7/2

--# bignum

31337 ^ 15

--# neg.simple

-3

--# neg.error
2 + -3

--# neg.better

2 + (-3)
3 + (-(13 * 37))

--# whitespace.ok

2+3

--# whitespace.eek

2+-3

--# whitespace.whew

2+(-3)

--# pi

pi

--# e

e

--# let

let e = 2.7182818284590451

--# epipi

(e ** pi) - pi

--# boolean

True && False
False || True

--# boolean.bad

True && 1

--# comparison

1 == 1
2 < 3
4 >= 3.99

--# neq

2 /= 3

--# parens

1 + (4 * 4)
1 + 4 * 4

--# precedence

:info (+)
:info (*)

--# grouping

5 * 8 / 3
5 * (8 / 3)

--# module

:module Data.Ratio

--# ratio

7 % 2

--# ratarith

7 % 2 + 2 % 3

--# denom

(22 % 7) * 7

--# denom.bad

22 % 7  *  7 % 22

--# denom.good

(22 % 7)  *  (7 % 22)

--# intpower

12 ^ 2
12.1 ^ 2

--# exponent.bad

12 ^ 2.1

--# exponent.zero

12 ^ 0
12 ^ (-1)

--# exponent.neg

12 ^^ (-2)
0 ^^ (-2)

--# exponent.float

12.2 ** 2.1

--# string

"This is a string."

--# newline

"Here's a newline -->\n<-- See?"
print "Here's a newline -->\n<-- See?"

--# list

[1, 2, 3]

--# list.shortlong

[]
["foo", "bar", "baz", "quux", "fnord", "xyzzy"]

--# list.bad

[1, 2, "buckle my shoe"]

--# range

[1..10]

--# range.step

[1.0,1.25..2.0]
[1,4..15]

--# char

'a'

--# range.char

['a','e'..'z']

--# work

let a = ['l', 'o', 't', 's', ' ', 'o', 'f', ' ', 'w', 'o', 'r', 'k']
a
a == "lots of work"
