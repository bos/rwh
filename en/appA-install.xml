<appendix id="install">
  <title>Installing GHC and Haskell libraries</title>

  <para id="x_l">We are providing the instructions below based on our
    experience installing &GHC; and other software in late 2008.
    Installation instructions inevitably become dated quickly; please
    bear this in mind as you read.</para>

  <sect1>
    <title>Installing GHC</title>
    <para id="x_m">Because &GHC; runs on a large number of platforms,
      we focus on a handful of the most popular.</para>

    <sect2 id="install.win">
      <title>Windows</title>

      <para id="x_n">The prebuilt binary packages of &GHC; should work
	on Windows Vista and XP (even Windows 2000). We have installed
	&GHC; 6.8.3 under Windows XP Service Pack 2; here are the
	steps we followed.</para>

      <note>
	<title>How much room does GHC need?</title>

	<para id="x_o">On Windows, &GHC; requires about 400MB of disk
	  space.  The exact amount will vary from release to
	  release.</para>
      </note>
  
      <para id="x_p">Our first step is to visit the &GHC; <ulink
	  url="http://www.haskell.org/ghc/download.html">download
	  page</ulink>, and follow the link to the current stable
	release.  Scroll down to the section entitled <quote>Binary
	  packages</quote>, and then again to the subsection for
	Windows.  Download the installer; in our case, it's named
	<filename>ghc-6.8.3-i386-windows.exe</filename>.</para>

      <informalfigure>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="figs/win32-download.png"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of Firefox, displaying the GHC download
	      page.</phrase>
	  </textobject>
	</mediaobject>
      </informalfigure>

      <para id="x_q">After the installer has downloaded,
	double-clicking on it starts the installation process.  This
	involves stepping through a normal Windows installer
	wizard.</para>

      <informalfigure>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="figs/win32-wizard1.png"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the GHC installation wizard on
	    Windows.</phrase>
	  </textobject>
	</mediaobject>
      </informalfigure>

      <para id="x_r">Once the installer has finished, the Start Menu's
	<quote>All Programs</quote> submenu should have a &GHC;
	folder, inside of which you'll find an icon that you can use
	to run &ghci;.</para>

      <informalfigure>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="figs/win32-start-menu.png"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the Windows XP start menu, showing
	      the GHC submenu.</phrase>
	  </textobject>
	</mediaobject>
      </informalfigure>

      <para id="x_s">Clicking on the &ghci; icon brings up a normal
	Windows console window, running &ghci;.</para>

      <informalfigure>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="figs/win32-ghci.png"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the ghci interpreter running on
	      Windows.</phrase>
	  </textobject>
	</mediaobject>
      </informalfigure>

      <note>
	<title>Updating your search path</title>

	<para id="x_t">The &GHC; installer automatically modifies your
	  user account's <envar>PATH</envar> environment variable so
	  that commands like &ghc; will be present in the command
	  shell's search path (i.e. you can type a &GHC; command name
	  without typing its complete path).  This change will take
	  effect the next time you open a command shell.</para>
      </note>
    </sect2>

    <sect2 id="install.mac">
      <title>Mac OS X</title>

      <para id="x_u">We have installed &GHC; 6.8.3 under Mac OS X 10.5
	(Leopard), on an Intel-based MacBook.  Before installing
	&GHC;, the Xcode development system must already be
	installed.</para>

      <para id="x_A1">The Xcode software installer may have come
	bundled on a DVD with your Mac.  If not (or you can't find
	it), you should be able to download it from Apple.  Once
	you've finished installing Xcode, continue on to download
	&GHC; itself.</para>

      <para id="x_v">Visit the &GHC; <ulink
	  url="http://www.haskell.org/ghc/download.html">download
	  page</ulink>, and follow the link to the current stable
	release.  Scroll down to the section entitled <quote>Binary
	  packages</quote>, and then again to the subsection for Mac
	OS X.  There is a single installer package available. Download
	and run it.</para>

      <tip>
	<title>Terminal at your fingertips yet?</title>

	<para id="x_F1">Since most of your interactions with &GHC;
	  will be through a &Terminal; window, this might be a good
	  time to add the &Terminal; application to your dock, if you
	  haven't already done so.  You can find it in the system's
	  <filename>/Applications/Utilities</filename> folder.</para>
      </tip>

      <para id="x_I1">The installation process should take a minute or
	two.  Finally, you should be able to successfully run the
	&ghci; command from your shell prompt.</para>

      <informalfigure>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="figs/osx-ghci.png"/>
	  </imageobject>
	  <textobject>
	    <phrase>Screenshot of the ghci interpreter running in a
	      Terminal window on Mac OS X.</phrase>
	  </textobject>
	</mediaobject>
      </informalfigure>

      <sect3>
	<title>Alternatives</title>

	<para id="x_WN1">Both the MacPorts and Fink projects provide builds of
	  &GHC;.</para>
      </sect3>
    </sect2>

    <sect2 id="install.debian">
      <title>Ubuntu and Debian Linux</title>
      
      <para id="x_XN1">Under both Ubuntu and Debian, you can install a minimal
	working version of &GHC; by running <command>sudo aptitude
	  install ghc6</command> from a shell prompt.</para>

      <para id="x_YN1">These distros maintain a small core &GHC; package, which
	is insufficient for much practical development. However, they
	make a number of additional prebuilt packages available. To
	see a complete list of these prebuilt packages, run
	<command>apt-cache search libghc6</command>.  We recommend
	that you install at least the <code>mtl</code> package, using
	<command>sudo aptitude install
	  libghc6-mtl-dev</command>.</para>

      <para id="x_ZN1">Since you will probably want to profile the performance of
	your Haskell programs at some point, you should also install
	the <code>ghc6-prof</code> package.</para>
    </sect2>

    <sect2 id="install.fedora">
      <title>Fedora Linux</title>
      
      <para id="x_J1">&GHC; is available as a standard Fedora binary
	package.  From a shell, all you need to do is run the
	following command:</para>
      
<screen><userinput>sudo yum -y install ghc ghc-doc ghc683-prof</userinput></screen>

      <para id="x_aN1">The base package, containing the &ghc; and &ghci; commands
	and libraries, is <filename>ghc</filename>.  The
	<filename>ghc-doc</filename> package contains the &GHC; user
	guide, and command and library documentation.  The
	<filename>ghc683-prof</filename> package contains
	profiling-capable versions of the standard libraries (note:
	its version number may have changed by the time you read
	this).</para>

      <para id="x_K1">Once installation has finished, you should be
	able to run &ghci; from the shell immediately.  You won't need
	to change your shell's search path, or set any environment
	variables.</para>
    </sect2>

    <sect2>
      <title>FreeBSD</title>

      <para id="x_bN1">Under FreeBSD, run the following commands:</para>
<screen><prompt>$</prompt> <userinput>cd /usr/ports/lang/ghc</userinput>
<prompt>$</prompt> <userinput>sudo make install clean</userinput>
</screen>

      <para id="x_cN1">This will download and build &GHC; from source.  You
	should expect the process to take several hours.</para>
    </sect2>
  </sect1>

  <sect1 id="installing.haskell.software">
    <title>Installing Haskell software</title>

    <para id="x_dN1">Almost all Haskell libraries are distributed using a
      standard packaging system named Cabal.  You can find hundreds of
      Haskell open source libraries and programs, all of which use
      Cabal, at <ulink
	url="http://hackage.haskell.org/">http://hackage.haskell.org/</ulink>, 
      the home of the Hackage code repository.</para>

    <sect2>
      <title>Automated download and installation with cabal</title>

      <para id="x_eN1">A command named <command>cabal</command> automates the job
	of downloading, building, and installing a Haskell package. It
	also figures out what dependencies a particular library needs,
	and either makes sure that they are installed already, or
	downloads and builds those first.  You can install any Haskell
	package with a single <command>cabal install
	  <replaceable>mypackage</replaceable></command>
	command.</para>

      <para id="x_fN1">The <command>cabal</command> command is not bundled with
	&GHC;, so at least as of version 6.8.3 of &GHC;, you will have
	to download and build <command>cabal</command>
	yourself.</para>

      <sect3>
	<title>Installing cabal</title>

	<para id="x_gN1">To build the <command>cabal</command> command, download
	  the sources for the following four packages from <ulink
	    url="http://hackage.haskell.org/">http://hackage.haskell.org/</ulink></para>

	<itemizedlist>
	  <listitem>
	    <para id="x_hN1"><code>Cabal</code></para>
	  </listitem>
	  <listitem>
	    <para id="x_iN1"><code>HTTP</code></para>
	  </listitem>
	  <listitem>
	    <para id="x_jN1"><code>zlib</code></para>
	  </listitem>
	  <listitem>
	    <para id="x_kN1"><code>cabal-install</code></para>
	  </listitem>
	</itemizedlist>

	<para id="x_lN1">Follow the instructions in <xref
	linkend="install.pkg.manual"/> below to manually build each of
	  the four packages above, making sure that you leave
	  <code>cabal-install</code> until last.</para>

	<para id="x_mN1">After you install the <code>cabal-install</code>
	  package, the <code>$HOME/.cabal/bin</code> directory will
	  contain the <command>cabal</command> command.  You can
	  either move it somewhere more convenient or add that
	  directory to your shell's search path.</para>
      </sect3>

      <sect3>
	<title>Updating cabal's package list</title>

	<para id="x_nN1">After installing <command>cabal</command>, and
	  periodically thereafter, you should download a fresh list of
	  packages from Hackage.  You can do so as follows:</para>

<screen><prompt>$</prompt> <userinput>cabal update</userinput></screen>
      </sect3>

      <sect3>
	<title>Installing a library or program</title>

	<para id="x_oN1">To install some executable or library, just run the
	  following command:</para>

<screen><prompt>$</prompt> <userinput>cabal install -p <replaceable>mypackage</replaceable></userinput></screen>
      </sect3>
    </sect2>

    <sect2 id="install.pkg.manual">
      <title>Building packages by hand</title>

      <para id="x_pN1">If you download a tarball from Hackage, it will arrive in
	source form.  Unpack the tarball, and go into the newly
	created directory in a command shell.  The process to build
	and install it is simple, consisting of three
	commmands:</para> 

      <orderedlist>
	<listitem>
	  <para id="x_qN1">Configure for system-wide installation (i.e. available
	    to all users):</para>
	  <screen><prompt>$</prompt> <userinput>runghc Setup configure -p</userinput></screen>
	  <para id="x_rN1">Alternatively, configure to install only for
	    yourself:</para>
	  <screen><prompt>$</prompt> <userinput>runghc Setup configure --user --prefix=$HOME -p</userinput></screen>
	</listitem>
	<listitem>
	  <para id="x_sN1">Build (this will build each source file twice, with
	    and without profiling support):</para>
	  <screen><prompt>$</prompt> <userinput>runghc Setup build</userinput></screen>
	</listitem>
	<listitem>
	  <para id="x_tN1">Install if you chose system-wide configuration
	    above:</para>
	  <screen><prompt>$</prompt> <userinput>sudo runghc Setup install</userinput></screen>
	  <para id="x_uN1">Alternatively, if you chose configuration for yourself
	    only:</para>
	  <screen><prompt>$</prompt> <userinput>runghc Setup install</userinput></screen>
	</listitem>
      </orderedlist>

      <para id="x_vN1">If you build by hand, you will frequently find that the
	configuration step fails because some other library must be
	installed first.  You may find yourself needing to download
	and build several packages before you can make progress on the
	one you really want.  This is why we recommend using the
	<command>cabal</command> command instead.</para>
    </sect2>
  </sect1>
</appendix>

<!--
local variables: 
sgml-parent-document: ("00book.xml" "book" "appendix")
end:
-->
